/*
[참고자료]
https://developers.naver.com/docs/login/api/
https://developers.naver.com/apps/#/register?api=nvlogin
https://developers.naver.com/apps/#/list
https://developers.naver.com/docs/login/devguide/#5-1-4-%ED%94%84%EB%A1%9C%ED%95%84%EC%9D%98-%EA%B0%B1%EC%8B%A0
https://devtansan-s-tocking.tistory.com/12
https://devtansan-s-tocking.tistory.com/16
https://devtansan-s-tocking.tistory.com/17
https://yoo-hyeok.tistory.com/88
*/

Client Id
XysPfL42COWDFUaWGFO1

Client Secret
7oktQ3IVw7

apiURL=https://nid.naver.com/oauth2.0/token?grant_type=authorization_code&client_id=XysPfL42COWDFUaWGFO1&client_secret=7oktQ3IVw7&redirect_uri=http%3A%2F%2Flocalhost%3A8880%2Fnongbu%2F&code=null&state=null
access_token
apiURL=https://nid.naver.com/oauth2.0/token?grant_type=authorization_code&client_id=XysPfL42COWDFUaWGFO1&client_secret=7oktQ3IVw7&redirect_uri=http%3A%2F%2Flocalhost%3A8880%2Fnongbu%2F&code=null&state=null
access_token
responseCode=200responseCode=200{"error":"invalid_request","error_description":"no valid data in session"}
{"error":"invalid_request","error_description":"no valid data in session"}
apiURL=https://nid.naver.com/oauth2.0/token?grant_type=authorization_code&client_id=XysPfL42COWDFUaWGFO1&client_secret=7oktQ3IVw7&redirect_uri=http%3A%2F%2Flocalhost%3A8880%2Fnongbu%2F&code=61fuBCBcXdyrHOS0OQ&state=414873314680791632455178445896064968965
access_token


responseCode=200{"access_token":"AAAAPNaiZUpZwIymdp-97OQ-wGloAguG9ifUOyyGRSxPurWpDUN19l9pcTX9717Tu5hHIELSzUZwu_pqA9ZqP1cj4pg","refresh_token":"CipRjcY0t9iiMXSSDKoyChisn0J17kVQtL1dXYYsO0JlqMIhPyZzR3x6cb66ipisG9VL3V57nhjtv1Yl0pMxRBiiPSOqaNg3ocLQWxbUuYooPn3aQq8kmhAyqfuU0HdvSeuSvO","token_type":"bearer","expires_in":"3600"}

responseCode=200{"access_token":"AAAAPNaiZUpZwIymdp-97OQ-wGloAguG9ifUOyyGRSxPurWpDUN19l9pcTX9717Tu5hHIELSzUZwu_pqA9ZqP1cj4pg","refresh_token":"CipRjcY0t9iiMXSSDKoyChisn0J17kVQtL1dXYYsO0JlqMIhPyZzR3x6cb66ipisG9VL3V57nhjtv1Yl0pMxRBiiPSOqaNg3ocLQWxbUuYooPn3aQq8kmhAyqfuU0HdvSeuSvO","token_type":"bearer","expires_in":"3600"}
{"resultcode":"00","message":"success","response":{"id":"41856938","email":"rladnfls0500@jr.naver.com","name":"\uae40\uc6b0\ub9b0"}}
{"resultcode":"00","message":"success","response":{"id":"41856938","email":"rladnfls0500@jr.naver.com","name":"\uae40\uc6b0\ub9b0"}}



@RequestMapping(value = "/personalInfo")
public void personalInfo(HttpServletRequest request) throws Exception {
        String token = "YOUR_ACCESS_TOKEN";// 네이버 로그인 접근 토큰; 여기에 복사한 토큰값을 넣어줍니다.
        String header = "Bearer " + token; // Bearer 다음에 공백 추가
        try {
            String apiURL = "https://openapi.naver.com/v1/nid/me";
            URL url = new URL(apiURL);
            HttpURLConnection con = (HttpURLConnection)url.openConnection();
            con.setRequestMethod("GET");
            con.setRequestProperty("Authorization", header);
            int responseCode = con.getResponseCode();
            BufferedReader br;
            if(responseCode==200) { // 정상 호출
                br = new BufferedReader(new InputStreamReader(con.getInputStream()));
            } else {  // 에러 발생
                br = new BufferedReader(new InputStreamReader(con.getErrorStream()));
            }
            String inputLine;
            StringBuffer response = new StringBuffer();
            while ((inputLine = br.readLine()) != null) {
                response.append(inputLine);
            }
            br.close();
            System.out.println(response.toString());
        } catch (Exception e) {
            System.out.println(e);
        }
}




----------------------------------------------------------------------------------------------------------

package member.controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public class ApiExamMemberProfile {

    public static void main(String[] args) {
        String token = "AAAAPNaiZUpZwIymdp-97OQ-wGloAguG9ifUOyyGRSxPurWpDUN19l9pcTX9717Tu5hHIELSzUZwu_pqA9ZqP1cj4pg"; // 네이버 로그인 접근 토큰;
        String header = "Bearer " + token; // Bearer 다음에 공백 추가

        String apiURL = "https://openapi.naver.com/v1/nid/me";

        Map<String, String> requestHeaders = new HashMap<>();
        requestHeaders.put("Authorization", header);
        String responseBody = get(apiURL,requestHeaders);

        System.out.println(responseBody);
    }

    private static String get(String apiUrl, Map<String, String> requestHeaders){
        HttpURLConnection con = connect(apiUrl);
        try {
            con.setRequestMethod("GET");
            for(Map.Entry<String, String> header :requestHeaders.entrySet()) {
                con.setRequestProperty(header.getKey(), header.getValue());
            }

            int responseCode = con.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) { // 정상 호출
                return readBody(con.getInputStream());
            } else { // 에러 발생
                return readBody(con.getErrorStream());
            }
        } catch (IOException e) {
            throw new RuntimeException("API 요청과 응답 실패", e);
        } finally {
            con.disconnect();
        }
    }

    private static HttpURLConnection connect(String apiUrl){
        try {
            URL url = new URL(apiUrl);
            return (HttpURLConnection)url.openConnection();
        } catch (MalformedURLException e) {
            throw new RuntimeException("API URL이 잘못되었습니다. : " + apiUrl, e);
        } catch (IOException e) {
            throw new RuntimeException("연결이 실패했습니다. : " + apiUrl, e);
        }
    }

    private static String readBody(InputStream body){
        InputStreamReader streamReader = new InputStreamReader(body);

        try (BufferedReader lineReader = new BufferedReader(streamReader)) {
            StringBuilder responseBody = new StringBuilder();

            String line;
            while ((line = lineReader.readLine()) != null) {
                responseBody.append(line);
            }

            return responseBody.toString();
        } catch (IOException e) {
            throw new RuntimeException("API 응답을 읽는데 실패했습니다.", e);
        }
    }
}